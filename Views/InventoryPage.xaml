<ContentPage
    x:Class="SnapLabel.Views.InventoryPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:buttons="clr-namespace:Syncfusion.Maui.Buttons;assembly=Syncfusion.Maui.Buttons"
    xmlns:constant="clr-namespace:SnapLabel.Constants"
    xmlns:controls="clr-namespace:SnapLabel.Controls"
    xmlns:effect="clr-namespace:Syncfusion.Maui.Core;assembly=Syncfusion.Maui.Core"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Maui;assembly=FFImageLoading.Maui"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:model="clr-namespace:SnapLabel.Models"
    xmlns:sfPopup="clr-namespace:Syncfusion.Maui.Popup;assembly=Syncfusion.Maui.Popup"
    xmlns:vm="clr-namespace:SnapLabel.ViewModels"
    Title="Inventory"
    x:DataType="vm:InventoryPageViewModel">

    <ContentPage.ToolbarItems>
        <ToolbarItem x:Name="BluetoothPicker" Command="{Binding HandleBluetoothCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="Mat"
                    Glyph="{Binding BluetoothIcon}"
                    Color="{AppThemeBinding Dark={StaticResource White},
                                            Light={StaticResource Black}}" />

            </ToolbarItem.IconImageSource>
        </ToolbarItem>

        <ToolbarItem Command="{Binding AddItemCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="Mat"
                    Glyph="{Static constant:FontsConstants.Add}"
                    Color="{AppThemeBinding Dark={StaticResource White},
                                            Light={StaticResource Black}}" />


            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>
    <Grid>
        <sfPopup:SfPopup
            AnimationMode="None"
            AutoSizeMode="Both"
            IsOpen="{Binding IsDeviceConnectedPopupVisible}"
            ShowHeader="False">

            <sfPopup:SfPopup.PopupStyle>
                <sfPopup:PopupStyle CornerRadius="16" PopupBackground="{AppThemeBinding Dark='#232323', Light={StaticResource White}}" />
            </sfPopup:SfPopup.PopupStyle>

            <sfPopup:SfPopup.ContentTemplate>
                <DataTemplate>
                    <VerticalStackLayout Padding="20" Spacing="12">

                        <Label
                            FontFamily="Mat"
                            FontSize="32"
                            HorizontalTextAlignment="Center"
                            Text="{Binding Device.Icon}" />

                        <Label HorizontalTextAlignment="Center" Text="{Binding Device.Name}" />

                        <buttons:SfButton
                            Command="{Binding DisconnectDeviceCommand}"
                            HorizontalOptions="Center"
                            Style="{StaticResource RippleButtonStyle}"
                            Text="Disconnect" />
                    </VerticalStackLayout>


                </DataTemplate>
            </sfPopup:SfPopup.ContentTemplate>
        </sfPopup:SfPopup>

        <CollectionView
            HorizontalOptions="Start"
            ItemSizingStrategy="MeasureAllItems"
            ItemsSource="{Binding Products}"
            SelectionMode="None"
            VerticalScrollBarVisibility="Never"
            WidthRequest="400">

            <CollectionView.ItemsLayout>
                <LinearItemsLayout ItemSpacing="5" Orientation="Vertical" />
            </CollectionView.ItemsLayout>

            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="model:Product">
                    <Border StrokeThickness="0">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="12" />
                        </Border.StrokeShape>
                        <Grid Padding="12" RowDefinitions="Auto, Auto, 400">
                            <Label
                                Margin="6,0,0,0"
                                FontAttributes="Bold"
                                FontSize="18"
                                Text="{Binding Name}" />
                            <Label
                                Grid.Row="1"
                                Margin="6,0,0,0"
                                Text="{Binding Price, StringFormat='{}{0:C}'}" />
                            <Border Grid.Row="2">
                                <Border.Shadow>
                                    <Shadow
                                        Brush="{AppThemeBinding Dark={StaticResource White},
                                                                Light={StaticResource Black}}"
                                        Opacity="0.4"
                                        Radius="3"
                                        Offset="5,5" />
                                </Border.Shadow>
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="16" />
                                </Border.StrokeShape>
                                <Grid>
                                    <ffimageloading:CachedImage
                                        Aspect="AspectFill"
                                        CacheDuration="30"
                                        FadeAnimationDuration="400"
                                        FadeAnimationEnabled="true"
                                        LoadingPlaceholder="out.gif"
                                        Source="{Binding ImagePath}" />

                                    <Button
                                        Margin="10"
                                        BackgroundColor="{AppThemeBinding Light=#E0E0E0,
                                                                          Dark=#2A2A2A}"
                                        Command="{Binding SendDataCommand, Source={RelativeSource AncestorType={Type vm:InventoryPageViewModel}}}"
                                        CommandParameter="{Binding .}"
                                        CornerRadius="60"
                                        FontFamily="Mat"
                                        FontSize="Large"
                                        HorizontalOptions="End"
                                        IsVisible="{Binding IsRadyToPrint, Source={RelativeSource AncestorType={Type vm:InventoryPageViewModel}}}"
                                        Text="{Static constant:FontsConstants.Print}"
                                        TextColor="{AppThemeBinding Dark={StaticResource White},
                                                                    Light={StaticResource Black}}"
                                        VerticalOptions="End" />
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <sfPopup:SfPopup
            Padding="{OnIdiom Phone=20,
                              Desktop=0}"
            AnimationMode="Zoom"
            HeaderHeight="26"
            HeightRequest="{OnIdiom Desktop=500}"
            IsFullScreen="{OnIdiom Phone=True,
                                   Desktop=False}"
            IsOpen="{Binding IsDevicesPopupVisible}"
            StaysOpen="True"
            WidthRequest="{OnIdiom Desktop=500}">
            <sfPopup:SfPopup.HeaderTemplate>
                <DataTemplate>
                    <Grid BackgroundColor="{AppThemeBinding Dark={StaticResource Black}, Light={StaticResource White}}">
                        <Label
                            Margin="5"
                            FontSize="10"
                            HorizontalTextAlignment="Start"
                            Text="Add a device"
                            VerticalOptions="Center" />
                    </Grid>
                </DataTemplate>
            </sfPopup:SfPopup.HeaderTemplate>
            <sfPopup:SfPopup.PopupStyle>
                <sfPopup:PopupStyle
                    CornerRadius="8"
                    HasShadow="True"
                    PopupBackground="{AppThemeBinding Dark={StaticResource Gray950},
                                                      Light={StaticResource White}}"
                    Stroke="{AppThemeBinding Light='#20000000',
                                             Dark='#20FFFFFF'}"
                    StrokeThickness="4" />
            </sfPopup:SfPopup.PopupStyle>
            <sfPopup:SfPopup.ContentTemplate>
                <DataTemplate>
                    <Grid
                        BackgroundColor="{AppThemeBinding Dark={StaticResource PrimaryDarkText},
                                                          Light={StaticResource White}}"
                        RowDefinitions="4,Auto,*,Auto"
                        RowSpacing="12">

                        <controls:InfiniteProgressBar />

                        <Label
                            Grid.Row="1"
                            Margin="5"
                            FontSize="14"
                            Text="Make sure your device is turned on and discoverable. Select a device below to connect." />

                        <CollectionView Grid.Row="2" ItemsSource="{Binding Devices}">

                            <CollectionView.ItemsLayout>
                                <LinearItemsLayout ItemSpacing="10" Orientation="Vertical" />
                            </CollectionView.ItemsLayout>

                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="model:BluetoothDevice">
                                    <Border Stroke="Transparent">
                                        <HorizontalStackLayout Margin="10" Spacing="10">
                                            <Label
                                                FontFamily="Mat"
                                                FontSize="Medium"
                                                Text="{Binding Icon}"
                                                VerticalTextAlignment="Center" />
                                            <Label Text="{Binding Name}" VerticalTextAlignment="Center" />
                                        </HorizontalStackLayout>
                                        <Border.GestureRecognizers>
                                            <TapGestureRecognizer Command="{Binding DeviceSelectedCommand, Source={x:RelativeSource AncestorType={x:Type vm:InventoryPageViewModel}}}" CommandParameter="{Binding .}" />
                                        </Border.GestureRecognizers>
                                    </Border>

                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>

                        <buttons:SfButton
                            Grid.Row="3"
                            Margin="10"
                            Command="{Binding CloseDevicesPopUpCommand}"
                            HorizontalOptions="End"
                            Style="{StaticResource RippleButtonStyle}"
                            Text="{Binding DevicePopupBtonText}"
                            VerticalOptions="End" />

                    </Grid>
                </DataTemplate>
            </sfPopup:SfPopup.ContentTemplate>
        </sfPopup:SfPopup>

    </Grid>
</ContentPage>