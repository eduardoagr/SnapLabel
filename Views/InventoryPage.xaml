<ContentPage
    x:Class="SnapLabel.Views.InventoryPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:buttons="clr-namespace:Syncfusion.Maui.Buttons;assembly=Syncfusion.Maui.Buttons"
    xmlns:constant="clr-namespace:SnapLabel.Constants"
    xmlns:controls="clr-namespace:SnapLabel.Controls"
    xmlns:effectsView="clr-namespace:Syncfusion.Maui.Core;assembly=Syncfusion.Maui.Core"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Maui;assembly=FFImageLoading.Maui"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:models="clr-namespace:SnapLabel.Models"
    xmlns:sfPopup="clr-namespace:Syncfusion.Maui.Popup;assembly=Syncfusion.Maui.Popup"
    xmlns:vm="clr-namespace:SnapLabel.ViewModels"
    x:Name="Root"
    Title="Inventory"
    x:DataType="vm:InventoryPageViewModel">

    <!--  TODO: Change to Shell.TitleView if needed  -->

    <Shell.TitleView>
        <HorizontalStackLayout
            Margin="0,0,10,0"
            FlowDirection="RightToLeft"
            Spacing="30">

            <Label
                FontFamily="Mat"
                FontSize="26"
                Text="{Static constant:FontsConstants.Add}"
                VerticalTextAlignment="Center">

                <Label.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding AddItemCommand}" />
                </Label.GestureRecognizers>
            </Label>


            <Label
                FontFamily="Mat"
                FontSize="26"
                Text="{Static constant:FontsConstants.Bluetooth}"
                VerticalTextAlignment="Center">

                <Label.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding ScanBluetoothCommand}" />
                </Label.GestureRecognizers>
            </Label>

        </HorizontalStackLayout>
    </Shell.TitleView>

    <Grid>
        <CollectionView
            HorizontalOptions="Start"
            ItemsSource="{Binding Products}"
            SelectionMode="None"
            VerticalScrollBarVisibility="Never"
            WidthRequest="400">

            <CollectionView.ItemsLayout>
                <LinearItemsLayout ItemSpacing="5" Orientation="Vertical" />
            </CollectionView.ItemsLayout>

            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="models:Product">
                    <Border StrokeThickness="0">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="12" />
                        </Border.StrokeShape>
                        <Grid Padding="12" RowDefinitions="Auto, Auto, 400">
                            <Label
                                Margin="6,0,0,0"
                                FontAttributes="Bold"
                                FontSize="18"
                                Text="{Binding Name}" />
                            <Label
                                Grid.Row="1"
                                Margin="6,0,0,0"
                                Text="{Binding Price, StringFormat='{}{0:C}'}" />
                            <Border Grid.Row="2" StrokeThickness="2">
                                <Border.Shadow>
                                    <Shadow
                                        Brush="{AppThemeBinding Dark={StaticResource White},
                                                                Light={StaticResource Black}}"
                                        Opacity="0.4"
                                        Radius="3"
                                        Offset="5,5" />
                                </Border.Shadow>
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="16" />
                                </Border.StrokeShape>
                                <ffimageloading:CachedImage
                                    Aspect="AspectFill"
                                    CacheDuration="30"
                                    FadeAnimationDuration="400"
                                    FadeAnimationEnabled="true"
                                    LoadingPlaceholder="out.gif"
                                    Source="{Binding ImagePath}" />

                            </Border>
                        </Grid>
                    </Border>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <sfPopup:SfPopup
            x:Name="BluetoothDiscoveryPopUp"
            AnimationMode="Zoom"
            HeaderHeight="26"
            IsOpen="{Binding IsPopUpOpen}"
            StaysOpen="True">
            <sfPopup:SfPopup.HeaderTemplate>
                <DataTemplate>
                    <Grid BackgroundColor="{AppThemeBinding Dark={StaticResource Black}, Light={StaticResource White}}" ColumnDefinitions="*,40">

                        <Border Grid.Column="1" StrokeThickness="0">
                            <Label
                                FontFamily="Mat"
                                FontSize="24"
                                HorizontalTextAlignment="Center"
                                Text="{Static constant:FontsConstants.Close}"
                                VerticalOptions="Center">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding ClosePopUpCommand}" />
                                </Label.GestureRecognizers>
                                <Label.Behaviors>
                                    <mct:TouchBehavior HoveredBackgroundColor="#e81123" />
                                </Label.Behaviors>
                            </Label>

                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="0,8,0,0" />
                            </Border.StrokeShape>
                        </Border>

                        <Label
                            Margin="5"
                            FontSize="10"
                            HorizontalTextAlignment="Start"
                            Text="Add a device"
                            VerticalOptions="Center" />
                    </Grid>
                </DataTemplate>
            </sfPopup:SfPopup.HeaderTemplate>
            <sfPopup:SfPopup.PopupStyle>
                <sfPopup:PopupStyle
                    CornerRadius="8"
                    HasShadow="True"
                    PopupBackground="{AppThemeBinding Dark={StaticResource Gray950},
                                                      Light={StaticResource White}}"
                    Stroke="{AppThemeBinding Light='#20000000',
                                             Dark='#20FFFFFF'}"
                    StrokeThickness="4" />
            </sfPopup:SfPopup.PopupStyle>
            <sfPopup:SfPopup.ContentTemplate>
                <DataTemplate>
                    <Grid
                        BackgroundColor="{AppThemeBinding Dark={StaticResource PrimaryDarkText},
                                                          Light={StaticResource White}}"
                        RowDefinitions="4, 30, 40, 300, Auto"
                        RowSpacing="2">

                        <controls:InfiniteProgressBar />

                        <Label
                            Grid.Row="1"
                            Margin="5,0,0,0"
                            FontAttributes="Bold"
                            FontSize="20"
                            Text="Add a device" />

                        <Label
                            Grid.Row="2"
                            Margin="5"
                            FontSize="14"
                            Text="Make sure your device is turned on and discoverable. Select a device below to connect." />

                        <CollectionView
                            x:Name="DevicesColection"
                            Grid.Row="3"
                            Margin="5,0,0,0"
                            ItemSizingStrategy="MeasureAllItems"
                            ItemsSource="{Binding Devices}"
                            SelectionChangedCommand="{Binding DeviceSelectedCommand}"
                            SelectionChangedCommandParameter="{Binding SelectedItem, Source={x:Reference DevicesColection}}"
                            SelectionMode="Single"
                            VerticalScrollBarVisibility="{OnIdiom Desktop=Always,
                                                                  Phone=Never}">

                            <CollectionView.ItemsLayout>
                                <LinearItemsLayout ItemSpacing="5" Orientation="Vertical" />
                            </CollectionView.ItemsLayout>

                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="models:BluetoothDeviceModel">
                                    <Grid
                                        ColumnDefinitions="32,*"
                                        ColumnSpacing="10"
                                        HeightRequest="52">
                                        <Label
                                            FontFamily="Mat"
                                            FontSize="Large"
                                            Text="{Binding FontIcon}"
                                            VerticalTextAlignment="Center" />
                                        <Label
                                            Grid.Column="1"
                                            Text="{Binding Name}"
                                            VerticalTextAlignment="Center" />
                                    </Grid>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>

                        <buttons:SfButton
                            Grid.Row="4"
                            Margin="10"
                            Background="{AppThemeBinding Light='#E0E0E0',
                                                         Dark='#2A2A2A'}"
                            Command="{Binding ClosePopUpCommand}"
                            CornerRadius="6"
                            HeightRequest="32"
                            HorizontalOptions="End"
                            Stroke="{AppThemeBinding Light='#E0E0E0',
                                                     Dark='#2A2A2A'}"
                            StrokeThickness="1"
                            Text="Cancel"
                            TextColor="{AppThemeBinding Light='Black',
                                                        Dark='White'}"
                            WidthRequest="200">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">

                                    <!--  Default state  -->
                                    <VisualState x:Name="Normal">
                                        <VisualState.Setters>
                                            <Setter Property="Background" Value="{AppThemeBinding Light='#E0E0E0', Dark='#2A2A2A'}" />
                                            <Setter Property="Stroke" Value="{AppThemeBinding Light='#E0E0E0', Dark='#2A2A2A'}" />
                                            <Setter Property="StrokeThickness" Value="1" />
                                        </VisualState.Setters>
                                    </VisualState>

                                    <!--  Simulated ripple press  -->
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Property="Background" Value="{AppThemeBinding Light='#CCCCCC', Dark='#444444'}" />
                                            <Setter Property="Stroke" Value="{AppThemeBinding Light='#888888', Dark='#AAAAAA'}" />
                                            <Setter Property="Scale" Value="0.98" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </buttons:SfButton>

                    </Grid>

                </DataTemplate>
            </sfPopup:SfPopup.ContentTemplate>
        </sfPopup:SfPopup>
    </Grid>




</ContentPage>